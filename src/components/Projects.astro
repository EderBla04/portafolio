---
import { getAllProjects, getFeaturedProjects, urlFor } from '../lib/sanityClient.ts';

// Definir interfaz para proyectos
interface Project {
  _id: string;
  title: string;
  description: string;
  image: any;
  technologies: string[];
  category: string;
  status: string;
  featured: boolean;
  githubUrl: string;
  demoUrl?: string;
}

// Obtener datos con tipado
const allProjects = await getAllProjects() as Project[];
const featuredProjects = await getFeaturedProjects() as Project[];

// Funci√≥n helper para obtener URL de imagen
function getImageUrl(image: any): string {
  if (typeof image === 'string') {
    return image; // URL est√°tica
  }
  if (image && typeof image === 'object') {
    try {
      const imageUrl = urlFor(image);
      if (imageUrl) {
        return imageUrl.width(400).height(300).url(); // Imagen de Sanity
      }
    } catch (e) {
      console.error("Error al procesar imagen:", e);
    }
  }
  return '/projects/default.jpg'; // Imagen por defecto
}
---

<section id="projects" class="py-20 bg-black">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-bold text-white mb-4">
        Mis <span class="text-blue-400">Proyectos</span>
      </h2>
      <div class="w-24 h-1 bg-blue-400 mx-auto mb-4"></div>
      <p class="text-gray-400 text-lg max-w-2xl mx-auto">
        Una selecci√≥n de proyectos que he desarrollado, desde aplicaciones web hasta APIs y herramientas
      </p>
    </div>
    
    <!-- Filtros de categor√≠a -->
    <div class="flex flex-wrap justify-center gap-4 mb-12">
      <button 
        class="filter-btn active bg-blue-600 text-white px-6 py-2 rounded-full font-medium transition-all duration-300"
        data-filter="all"
      >
        Todos
      </button>
      <button 
        class="filter-btn bg-gray-800 text-gray-300 hover:bg-gray-700 px-6 py-2 rounded-full font-medium transition-all duration-300"
        data-filter="web"
      >
        Web
      </button>
      <button 
        class="filter-btn bg-gray-800 text-gray-300 hover:bg-gray-700 px-6 py-2 rounded-full font-medium transition-all duration-300"
        data-filter="mobile"
      >
        Mobile
      </button>
      <button 
        class="filter-btn bg-gray-800 text-gray-300 hover:bg-gray-700 px-6 py-2 rounded-full font-medium transition-all duration-300"
        data-filter="api"
      >
        API
      </button>
      <button 
        class="filter-btn bg-gray-800 text-gray-300 hover:bg-gray-700 px-6 py-2 rounded-full font-medium transition-all duration-300"
        data-filter="other"
      >
        Otros
      </button>
    </div>
    
    <!-- Grid de proyectos -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="projects-grid">
      {allProjects.map((project: Project) => (
        <div 
          class={`project-card bg-gray-900/50 border border-blue-500/20 rounded-lg overflow-hidden hover:border-blue-400/50 transition-all duration-300 hover:transform hover:scale-105 ${project.featured ? 'featured' : ''}`}
          data-category={project.category}
        >
          <!-- Imagen del proyecto -->
          <div class="relative h-48 bg-gradient-to-br from-blue-900/30 to-gray-800/30">
            <img 
              src={getImageUrl(project.image)} 
              alt={project.title}
              class="absolute inset-0 w-full h-full object-cover"
              onload="this.style.display='block'; this.parentElement.querySelector('.project-placeholder').style.display='none'; this.parentElement.style.background='none';"
              onerror="this.style.display='none'; this.parentElement.querySelector('.project-placeholder').style.display='flex';"
              style="display: none;"
            />
            <!-- Placeholder si no hay imagen -->
            <div class="project-placeholder absolute inset-0 flex items-center justify-center">
              <div class="text-6xl text-blue-400/50">üíº</div>
            </div>
            
            <!-- Badge de estado -->
            <div class={`absolute top-3 right-3 px-2 py-1 rounded-full text-xs font-medium ${
              project.status === 'completed' ? 'bg-green-600 text-white' :
              project.status === 'in-progress' ? 'bg-yellow-600 text-white' :
              'bg-gray-600 text-white'
            }`}>
              {project.status === 'completed' ? 'Completado' :
               project.status === 'in-progress' ? 'En Progreso' :
               'Planeado'}
            </div>
            
            <!-- Badge de destacado -->
            {project.featured && (
              <div class="absolute top-3 left-3 bg-blue-600 text-white px-2 py-1 rounded-full text-xs font-medium">
                ‚≠ê Destacado
              </div>
            )}
          </div>
          
          <!-- Contenido -->
          <div class="p-6">
            <h3 class="text-xl font-semibold text-white mb-2">
              {project.title}
            </h3>
            <p class="text-gray-400 text-sm mb-4 line-clamp-3">
              {project.description}
            </p>
            
            <!-- Tecnolog√≠as -->
            <div class="flex flex-wrap gap-2 mb-4">
              {project.technologies.slice(0, 3).map((tech: string) => (
                <span class="bg-blue-900/30 text-blue-300 px-2 py-1 rounded text-xs">
                  {tech}
                </span>
              ))}
              {project.technologies.length > 3 && (
                <span class="text-gray-500 text-xs px-2 py-1">
                  +{project.technologies.length - 3} m√°s
                </span>
              )}
            </div>
            
            <!-- Enlaces -->
            <div class="flex gap-3">
              <a 
                href={project.githubUrl} 
                target="_blank" 
                rel="noopener noreferrer"
                class="flex items-center gap-2 bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-300"
              >
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                </svg>
                GitHub
              </a>
              {project.demoUrl && (
                <a 
                  href={project.demoUrl} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  class="flex items-center gap-2 bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-300"
                >
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
                  </svg>
                  Demo
                </a>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
    
    <!-- Enlace a GitHub -->
    <div class="text-center mt-12">
      <a 
        href="https://github.com/tu-usuario" 
        target="_blank" 
        rel="noopener noreferrer"
        class="inline-flex items-center gap-3 bg-gray-800 hover:bg-gray-700 text-white px-8 py-4 rounded-lg font-medium transition-all duration-300 hover:transform hover:scale-105"
      >
        <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 24 24">
          <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
        </svg>
        Ver m√°s proyectos en GitHub
        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"></path>
        </svg>
      </a>
    </div>
  </div>
</section>

<script>
  // Funcionalidad de filtros
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll<HTMLButtonElement>('.filter-btn');
    const projectCards = document.querySelectorAll<HTMLElement>('.project-card');
    
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filter = this.getAttribute('data-filter');
        
        // Actualizar botones activos
        filterButtons.forEach(btn => {
          btn.classList.remove('active', 'bg-blue-600', 'text-white');
          btn.classList.add('bg-gray-800', 'text-gray-300');
        });
        
        this.classList.add('active', 'bg-blue-600', 'text-white');
        this.classList.remove('bg-gray-800', 'text-gray-300');
        
        // Filtrar proyectos
        projectCards.forEach(card => {
          const category = card.getAttribute('data-category');
          
          if (filter === 'all' || category === filter) {
            (card as HTMLElement).style.display = 'block';
            (card as HTMLElement).style.animation = 'fadeIn 0.5s ease-in-out';
          } else {
            (card as HTMLElement).style.display = 'none';
          }
        });
      });
    });
  });
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
